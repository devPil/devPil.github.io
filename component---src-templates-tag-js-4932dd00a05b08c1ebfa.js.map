{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/devPil.jpg","webpack:///./src/components/tags/TechTag.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/MobileSocialLinks.js","webpack:///./src/components/header/MobilePageLinks.js","webpack:///./src/components/header/SocialLinks.js","webpack:///./src/components/header/MobileBio.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js"],"names":["Tag","_ref","pageContext","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","console","log","tag","totalCount","tagHeader","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","keywords","className","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_8__","map","post","tags","node","frontmatter","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","date","excerpt","techTags","forEach","i","label","push","_components_tags_TechTag__WEBPACK_IMPORTED_MODULE_9__","tech","name","size","color","getTechTags","propTypes","PropTypes","shape","string","isRequired","number","arrayOf","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","object","func","m","module","exports","require","default","p","TechTag","icon","test","FontAwesome","Devicons","gatsby__WEBPACK_IMPORTED_MODULE_5__","style","fontSize","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","MobileSocialLinks","contacts","react_default","href","github","index_esm","MobilePages","gatsby_browser_entry","SocialLinks","MobileBio","src","devPil","maxWidth","maxHeight","borderRadius","boxShadow","alt","Header","siteTitle","tagline","background","margin","padding","textDecoration","header_SocialLinks","header_MobileSocialLinks","MobilePageLinks","header_MobileBio","Layout","Fragment","header_header","paddingTop","Date","getFullYear","_4257020408","Bio","TechTags","count","includes","filter","category","Sidebar","sidebar_Bio","sidebar_SocialLinks","sidebar_TechTags","_1742247202"],"mappings":"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","file":"component---src-templates-tag-js-4932dd00a05b08c1ebfa.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"../pages/index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst Tag = ({ pageContext, data }) => {\r\n    const posts = data.allMarkdownRemark.edges\r\n    const labels = data.site.siteMetadata.labels\r\n    console.log(pageContext.tag)\r\n    const { tag } = pageContext\r\n    const { totalCount } = data.allMarkdownRemark\r\n    const tagHeader = `${totalCount} post${\r\n        totalCount === 1 ? \"\" : \"s\"\r\n        } tagged with \"${tag}\"`\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `node.js`, `graphql`]} />\r\n            <div className=\"index-main\">\r\n                <div className=\"sidebar px-4 py-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"post-list-main\">\r\n                    <i><h2 className=\"heading\">{tagHeader}</h2></i>\r\n                    {posts.map((post) => {\r\n                        const tags = post.node.frontmatter.tags\r\n                        return (\r\n                            <div key={post.node.id} className=\"container mt-5\">\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-dark\"\r\n                                >\r\n                                    <h2 className=\"heading\">{post.node.frontmatter.title}</h2>\r\n                                </Link>\r\n                                <small className=\"d-block text-info\">Posted on {post.node.frontmatter.date}\r\n                                </small>\r\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-primary\"\r\n                                >\r\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                                </Link>\r\n                                <div className=\"d-block\">\r\n                                    {getTechTags(tags)}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nTag.propTypes = {\r\n    pageContext: PropTypes.shape({\r\n        tag: PropTypes.string.isRequired,\r\n    }),\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            totalCount: PropTypes.number.isRequired,\r\n            edges: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    node: PropTypes.shape({\r\n                        frontmatter: PropTypes.shape({\r\n                            title: PropTypes.string.isRequired,\r\n                        }),\r\n                    }),\r\n                }).isRequired\r\n            ),\r\n        }),\r\n    }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n        siteMetadata {\r\n            title \r\n            author\r\n            labels {\r\n                tag\r\n                tech \r\n                name \r\n                size \r\n                color\r\n            } \r\n        }\r\n    } \r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n         node {\r\n            excerpt(pruneLength: 200)\r\n            html\r\n            id\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"MMMM, YYYY\")\r\n                tags\r\n            }\r\n             fields {\r\n                slug\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Tag","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/devPil-223d15ff57f270c5bea79c3994f359ff.jpg\";","import React from \"react\"\r\nimport * as FontAwesome from \"react-icons/fa\"\r\nimport * as Devicons from \"react-icons/di\"\r\n\r\nimport \"./tags.css\"\r\nimport { Link } from \"gatsby\";\r\n\r\nconst TechTag = (props) => {\r\n    const { tag, tech, name, size, color } = props\r\n    const str = name;\r\n    const icon = /^Fa/.test(str) ? React.createElement(FontAwesome[name]) : React.createElement(Devicons[name]);\r\n\r\n    return (\r\n        <div className=\"d-inline-block p-1\">\r\n            <Link to={`/tags/${tag}/`}>\r\n                <button\r\n                    className=\"tech-tag text-white\">\r\n                    <p className=\"d-inline\">{tech} </p>\r\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}>{icon}</div>\r\n                </button>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TechTag","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `google-site-verification`,\r\n          content: 'LCkQhqdP4o6gkhCNAyrwHNn-TpyiL96m_gBcUWsoNNw',\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\";\r\nimport { FaGithubSquare } from \"react-icons/fa\"\r\n\r\nimport \"../layout.css\"\r\n\r\nconst MobileSocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"bottom-bar py-1\">\r\n            <a className=\"text-light\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileSocialLinks;","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst MobilePages = () => {\r\n    return (\r\n        <div className=\"mobile-pages-main\">\r\n            <div className=\"text-center\">\r\n                <p className=\"d-inline p-4\"><Link to=\"/\"><span className=\"text-dark\">Home</span></Link></p>\r\n                {/*\r\n                <p className=\"d-inline p-4\"><Link to=\"/about\"><span className=\"text-dark\">About</span></Link></p>\r\n                <p className=\"d-inline p-4\"><Link to=\"/archive\"><span className=\"text-dark\">Archive</span></Link></p>\r\n                */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobilePages\r\n\r\n\r\n","import React from \"react\"\r\nimport { FaGithubSquare } from \"react-icons/fa\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"social-links float-right mr-4\">\r\n            <a className=\"text-light ml-4\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={40} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport \"./header.css\"\r\nimport devPil from \"../../images/devPil.jpg\"\r\n\r\nconst MobileBio = (props) => {\r\n\r\n    return (\r\n        <div className=\"mobile-bio-main\">\r\n            <img src={devPil}  className=\"ml-4 mt-2\" style={{ maxWidth: `75px`, maxHeight: `75px`, borderRadius: `50%`,boxShadow: `1px 1px 3px`}} alt=\"author-pic\" />\r\n            <h4 className=\"mr-4 mt-4\">{props.author}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileBio","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nimport MobileSocialLinks from \"./MobileSocialLinks\"\r\nimport MobilePageLinks from \"./MobilePageLinks\"\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport MobileBio from \"./MobileBio\"\r\nimport \"./header.css\"\r\n\r\nconst Header = ({ siteTitle, tagline, author, contacts }) => {\r\n\r\n  return (\r\n    <header\r\n      className=\"head-main\"\r\n      style={{\r\n        background: `black`\r\n      }}\r\n    >\r\n      <div className=\"head-elements\"\r\n        style={{\r\n          margin: `0`,\r\n          padding: `.75rem`\r\n        }}\r\n      >\r\n        <h1 className=\"head-logo ml-4\" style={{ margin: 0 }}>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              color: `white`,\r\n              textDecoration: `none`,\r\n            }}\r\n          >\r\n            {siteTitle}\r\n          </Link>\r\n        </h1>\r\n        <SocialLinks contacts={contacts} />\r\n      </div>\r\n      <MobileSocialLinks contacts={contacts} />\r\n      <MobilePageLinks />\r\n      <MobileBio author={author} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport Header from \"./header/header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            tagline\r\n            author\r\n            contacts { github }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n      render={data => (\r\n        <>\r\n          <Header\r\n            siteTitle={data.site.siteMetadata.title}\r\n            tagline={data.site.siteMetadata.tagline}\r\n            author={data.site.siteMetadata.author}\r\n            contacts={data.site.siteMetadata.contacts} />\r\n          <div\r\n            style={{\r\n              margin: `0 auto`,\r\n              padding: `0px 1.0875rem 1.45rem`,\r\n              paddingTop: 0,\r\n            }}\r\n          >\r\n            <main className=\"p-4\">{children}</main>\r\n            <footer className=\"text-center\">\r\n              <hr/>\r\n              <p className=\"d-inline\">© {new Date().getFullYear()} <a className=\"text-info\" href=\"https://devPil.github.io/\">devPil</a>, All Rights Reserved.</p>\r\n              <p className=\"mt-5 text-muted d-inline\"><i> Built with\r\n                            {` `}\r\n                <a className=\"text-info\" href=\"https://www.gatsbyjs.org\">Gatsby</a></i>\r\n              </p>\r\n            </footer>\r\n          </div>\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport \"./sidebar.css\"\r\n\r\nimport devPil from \"../../images/devPil.jpg\"\r\n\r\nconst Bio = ({ author, tagline }) => {\r\n\r\n    return (\r\n        <div className=\"bio-main w-75\">\r\n            <img src={devPil} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\" />\r\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\r\n            <small className=\"text-muted\">{tagline}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio","import React from \"react\"\r\nimport {\r\n    FaGithubSquare,\r\n} from \"react-icons/fa\"\r\nimport \"./sidebar.css\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"side-social-links float-left mt-3 mb-3\">\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport TechTag from \"../tags/TechTag\"\r\n\r\nconst TechTags = (props) => {\r\n    const labels = props.labels\r\n    const posts = props.posts\r\n\r\n    const labelCount = labels.map(label => {\r\n        let count = 0;\r\n        posts.forEach(post => {\r\n            if (post.node.frontmatter.tags.includes(label.tag)) {\r\n                count = count + 1\r\n            }\r\n        })\r\n        return [label.tag, count]\r\n    })\r\n\r\n    const categories = labelCount.filter(label => {\r\n        return label[1] > 0\r\n    })\r\n\r\n    const tags = categories.map(category => {\r\n        return category[0]\r\n    })\r\n\r\n\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Tech Topics</h4>\r\n            <div className=\"d-block\">\r\n                {getTechTags(tags)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TechTags","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport Bio from \"./Bio\"\r\nimport \"./sidebar.css\"\r\n\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport TechTags from \"./TechTags\"\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n                query SiteBioQuery {\r\n                    site {\r\n                        siteMetadata {\r\n                            title\r\n                            tagline\r\n                            author\r\n                            contacts { github }\r\n                            labels {\r\n                                tag\r\n                                tech\r\n                                name \r\n                                size \r\n                                color\r\n                            }\r\n                        }\r\n                    }\r\n                    allMarkdownRemark(\r\n                        limit: 10\r\n                        sort: { fields: [frontmatter___date], order: DESC }\r\n                        filter: { frontmatter: { published: { eq: true } } }\r\n                    ) {\r\n                        edges {\r\n                            node {\r\n                                frontmatter {\r\n                                    tags\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => (\r\n                <>\r\n                    <div className=\"sidebar-main border-right\">\r\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\r\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\r\n                        <div className=\"page-links\">\r\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Home</span></Link>\r\n                            {/*\r\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\r\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\r\n                            */}\r\n                        </div>\r\n                        <div className=\"tech-tags mt-4\">\r\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Sidebar"],"sourceRoot":""}