{"data":{"site":{"siteMetadata":{"url":"https://devpil.github.io","title":"Pil Developer Diary","labels":[{"tag":"algorithm","tech":"Algorithm","name":"DiCode","size":20,"color":"deepskyblue"},{"tag":"react","tech":"React","name":"DiReact","size":20,"color":"deepskyblue"},{"tag":"nodejs","tech":"Node.js","name":"DiNodejsSmall","size":20,"color":"lightgreen"},{"tag":"git","tech":"Git","name":"DiGitMerge","size":20,"color":"white"},{"tag":"javascript","tech":"JavaScript","name":"DiJsBadge","size":20,"color":"yellow"},{"tag":"css","tech":"CSS","name":"DiCss3Full","size":20,"color":"teal"},{"tag":"python","tech":"Python","name":"DiPython","size":20,"color":"deepskyblue"},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":20,"color":"crimson"},{"tag":"java","tech":"Java","name":"FaJava","size":20,"color":"wheat"},{"tag":"angular","tech":"Angular","name":"DiAngularSimple","size":20,"color":"red"},{"tag":"html","tech":"HTML","name":"FaHtml5","size":20,"color":"darkorange"},{"tag":"php","tech":"php","name":"DiPhp","size":20,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"DiMongodb","size":20,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"DiVisualstudio","size":20,"color":"deepskyblue"}]}},"markdownRemark":{"html":"<p><br>\n출처: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42583?language=javascript\">프로그래머스 다리를 지나는 트럭</a></p>\n<p>먼저 문제는 스택과 큐를 활용한 알고리즘 문제이다.\n다음과 같은 정보를 알고 가야 한다.</p>\n<ul>\n<li>스택: LIFO</li>\n<li>큐: FIFO</li>\n</ul>\n<p>먼저 다리위르 지나고있는 트럭을 저장할 변수 <strong>moving</strong>를 만들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> moving <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>다리위를 지나고있는 트럭 <strong>moving</strong>과, 대기중인 트럭 <strong>truck_weights</strong>가 모두 없어질때까지 반복문을 돌리도록 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 이동중인 트럭 리스트</span>\n    <span class=\"token keyword\">let</span> moving <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> moving<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>다음으로 반복문을 실행할 경우 1초가 지나도록 설정해주며, 다리위를 지나고있는 트럭들의 무게를 저장하는 변수를 선언해주도록 하자</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 이동중인 트럭 리스트</span>\n    <span class=\"token keyword\">let</span> moving <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> moving<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 반복문을 한번 실행할때마다 1초가 지나도록</span>\n        answer<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> \n        <span class=\"token comment\">// 이동중인 트럭들의 무게 합</span>\n        <span class=\"token keyword\">let</span> truckWeightSum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이동중인 트럭들의 전체 무게와, 다음 트럭의 무게의 합이 최대 중량(weight) 보다 작을경우 트럭을 이동중인 리스트에 넣으며 대기중인 트럭 리스트에서 빼도록 해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 이동중인 트럭 리스트</span>\n    <span class=\"token keyword\">let</span> moving <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> moving<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 반복문을 한번 실행할때마다 1초가 지나도록</span>\n        answer<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> \n        <span class=\"token comment\">// 이동중인 트럭들의 무게 합</span>\n        <span class=\"token keyword\">let</span> truckWeightSum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 이동중인 트럭들의 무게 합과, 대기중인 첫번째 트럭의 무게합이 최대중량인 weight보다 작을경우 이동중인 트럭 리스트에 넣어주도록 한다.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>truckWeightSum <span class=\"token operator\">+</span> truck_weights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> weight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           moving<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n               weight<span class=\"token punctuation\">:</span> truck_weights<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n               move<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>마지막으로 이동중인 트럭의 무게합과, 이동중인 트럭들의 현황을 업데이트해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 이동중인 트럭 리스트</span>\n    <span class=\"token keyword\">let</span> moving <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> moving<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 반복문을 한번 실행할때마다 1초가 지나도록</span>\n        answer<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> \n        <span class=\"token comment\">// 이동중인 트럭들의 무게 합</span>\n        <span class=\"token keyword\">let</span> truckWeightSum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        moving <span class=\"token operator\">=</span> moving<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 이동중인 트럭의 이동현황 업데이트(1초당 1칸)</span>\n            item<span class=\"token punctuation\">.</span>move<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 다리를 지나는 중인 트럭들</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>move <span class=\"token operator\">&lt;=</span> bridge_length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            \tarr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 이동중인 트럭의 총 합</span>\n                truckWeightSum <span class=\"token operator\">+=</span> item<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 이동중인 트럭들의 무게 합과, 대기중인 첫번째 트럭의 무게합이 최대중량인 weight보다 작을경우 이동중인 트럭 리스트에 넣어주도록 한다.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>truckWeightSum <span class=\"token operator\">+</span> truck_weights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> weight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 이동중인 트럭리스트에 트럭을 넣어주는 동시에, 대기중인 트럭 리스트에서 트럭을 빼도록 한다.</span>\n            moving<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                weight<span class=\"token punctuation\">:</span> truck_weights<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n                move<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>정리</strong>:큐와 스택관련 문제를 처음 접해서인지 어려웠다.<br>\n큐와 스택에 대하여 확실히 알게되는 계기를 마련하였다.</p>","frontmatter":{"title":"[프로그래머스 - 스택/큐] 다리를 지나는 트럭","date":"July 09, 2019","tags":["algorithm","javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Algorithm/programmers_30_42583/"}}