{"data":{"site":{"siteMetadata":{"url":"https://developer-diary.netlify.com","title":"Pil Developer Diary","labels":[{"tag":"algorithm","tech":"Algorithm","name":"DiCode","size":20,"color":"deepskyblue"},{"tag":"react","tech":"React","name":"DiReact","size":20,"color":"deepskyblue"},{"tag":"nodejs","tech":"Node.js","name":"DiNodejsSmall","size":20,"color":"lightgreen"},{"tag":"git","tech":"Git","name":"DiGitMerge","size":20,"color":"white"},{"tag":"javascript","tech":"JavaScript","name":"DiJsBadge","size":20,"color":"yellow"},{"tag":"css","tech":"CSS","name":"DiCss3Full","size":20,"color":"teal"},{"tag":"python","tech":"Python","name":"DiPython","size":20,"color":"deepskyblue"},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":20,"color":"crimson"},{"tag":"java","tech":"Java","name":"FaJava","size":20,"color":"wheat"},{"tag":"angular","tech":"Angular","name":"DiAngularSimple","size":20,"color":"red"},{"tag":"html","tech":"HTML","name":"FaHtml5","size":20,"color":"darkorange"},{"tag":"php","tech":"php","name":"DiPhp","size":20,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"DiMongodb","size":20,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"DiVisualstudio","size":20,"color":"deepskyblue"}]}},"markdownRemark":{"html":"<p><br>\n출처: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42583?language=javascript\">프로그래머스 다리를 지나는 트럭</a></p>\n<p>먼저 문제는 스택과 큐를 활용한 알고리즘 문제이다.\n다음과 같은 정보를 알고 가야 한다.</p>\n<ul>\n<li>스택: LIFO</li>\n<li>큐: FIFO</li>\n</ul>\n<p>먼저 다리위르 지나고있는 트럭을 저장할 변수 <strong>moving</strong>를 만들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function solution(bridge_length, weight, truck_weights) {\n    let answer = 0;\n    let moving = [];\n    return answer;\n}</code></pre></div>\n<p>다리위를 지나고있는 트럭 moving와, 대기중인 트럭 truck_weights가 모두 없어질때까지 반복문을 돌리도록 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function solution(bridge_length, weight, truck_weights) {\n    let answer = 0;\n    // 이동중인 트럭 리스트\n    let moving = [];\n    while(!(truck_weights.length === 0 &amp;&amp; moving.length === 0)) {\n\n    }\n    return answer;\n}</code></pre></div>\n<p>다음으로 반복문을 실행할 경우 1초가 지나도록 설정해주며, 다리위를 지나고있는 트럭들의 무게를 저장하는 변수를 선언해주도록 하자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function solution(bridge_length, weight, truck_weights) {\n    let answer = 0;\n    // 이동중인 트럭 리스트\n    let moving = [];\n    while(!(truck_weights.length === 0 &amp;&amp; moving.length === 0)) {\n        // 반복문을 한번 실행할때마다 1초가 지나도록\n        answer++; \n        // 이동중인 트럭들의 무게 합\n        let truckWeightSum = 0;\n\n    }\n    return answer;\n}</code></pre></div>\n<p>이동중인 트럭들의 전체 무게와, 다음 트럭의 무게의 합이 최대 중량(weight) 보다 작을경우 트럭을 이동중인 리스트에 넣으며 대기중인 트럭 리스트에서 빼도록 해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function solution(bridge_length, weight, truck_weights) {\n    let answer = 0;\n    // 이동중인 트럭 리스트\n    let moving = [];\n    while(!(truck_weights.length === 0 &amp;&amp; moving.length === 0)) {\n        // 반복문을 한번 실행할때마다 1초가 지나도록\n        answer++; \n        // 이동중인 트럭들의 무게 합\n        let truckWeightSum = 0;\n\n        // 이동중인 트럭들의 무게 합과, 대기중인 첫번째 트럭의 무게합이 최대중량인 weight보다 작을경우 이동중인 트럭 리스트에 넣어주도록 한다.\n        if (truckWeightSum + truck_weights[0] &lt;= weight) {\n           moving.push({\n               weight: truck_weights.shift(),\n               move: 1,\n           });\n        }\n    }\n    return answer;\n}</code></pre></div>\n<p>마지막으로 이동중인 트럭의 무게합과, 이동중인 트럭들의 현황을 업데이트해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function solution(bridge_length, weight, truck_weights) {\n    let answer = 0;\n    // 이동중인 트럭 리스트\n    let moving = [];\n    while(!(truck_weights.length === 0 &amp;&amp; moving.length === 0)) {\n        // 반복문을 한번 실행할때마다 1초가 지나도록\n        answer++; \n        // 이동중인 트럭들의 무게 합\n        let truckWeightSum = 0;\n\n        moving = moving.reduce((arr, item) =&gt; {\n            // 이동중인 트럭의 이동현황 업데이트(1초당 1칸)\n            item.move++;\n            // 다리를 지나는 중인 트럭들\n            if (item.move &lt;= bridge_length) {\n            \tarr.push(item);\n                // 이동중인 트럭의 총 합\n                truckWeightSum += item.weight;\n            }\n            return arr;\n        }, []);\n\n        // 이동중인 트럭들의 무게 합과, 대기중인 첫번째 트럭의 무게합이 최대중량인 weight보다 작을경우 이동중인 트럭 리스트에 넣어주도록 한다.\n        if (truckWeightSum + truck_weights[0] &lt;= weight) {\n           moving.push({\n               weight: truck_weights.shift(), // 대기중인 트럭리스트에서 트럭을 빼도록 한다.\n               move: 1,\n           });\n        }\n    }\n    return answer;\n}</code></pre></div>","frontmatter":{"title":"[프로그래머스 - 스택/큐] 다리를 지나는 트럭","date":"July 09, 2019","tags":["algorithm","javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Algorithm/programmers_30_42583/"}}