{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/devPil.jpg","webpack:///./src/components/tags/TechTag.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/MobileSocialLinks.js","webpack:///./src/components/header/MobilePageLinks.js","webpack:///./src/components/header/SocialLinks.js","webpack:///./src/components/header/MobileBio.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js"],"names":["pageQuery","IndexPage","_ref","data","posts","allMarkdownRemark","edges","console","log","labels","site","siteMetadata","nextPage","toString","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_7__","_components_seo__WEBPACK_IMPORTED_MODULE_8__","title","keywords","className","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_9__","map","post","tags","node","frontmatter","key","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","_components_tags_TechTag__WEBPACK_IMPORTED_MODULE_10__","tech","name","size","color","getTechTags","rel","style","textDecoration","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","p","TechTag","icon","test","FontAwesome","Devicons","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","fontSize","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","MobileSocialLinks","contacts","react_default","href","github","index_esm","MobilePages","gatsby_browser_entry","SocialLinks","MobileBio","src","devPil","maxWidth","maxHeight","borderRadius","boxShadow","alt","Header","siteTitle","tagline","background","margin","padding","header_SocialLinks","header_MobileSocialLinks","MobilePageLinks","header_MobileBio","Layout","Fragment","header_header","paddingTop","Date","getFullYear","_4257020408","Bio","TechTags","count","includes","filter","category","Sidebar","sidebar_Bio","sidebar_SocialLinks","sidebar_TechTags","_1742247202","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","prototype","call","source","flags","R","this","undefined","f","configurable","get"],"mappings":"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","file":"component---src-pages-index-js-effbb686944ae7e67d5e.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  console.log(data);\r\n  const labels = data.site.siteMetadata.labels\r\n  const currentPage = 1\r\n  const nextPage = (currentPage + 1).toString()\r\n\r\n  const getTechTags = (tags) => {\r\n    const techTags = []\r\n    tags.forEach((tag, i) => {\r\n      labels.forEach((label) => {\r\n        if (tag === label.tag) {\r\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n        }\r\n      })\r\n    })\r\n    return techTags\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\r\n      <div className=\"index-main\">\r\n        <div className=\"sidebar px-4 py-2\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"post-list-main\">\r\n          {posts.map((post) => {\r\n            const tags = post.node.frontmatter.tags\r\n            return (\r\n              <div key={post.node.id} className=\"container mt-5\">\r\n                <Link\r\n                  to={post.node.fields.slug}\r\n                  className=\"text-dark\"\r\n                >\r\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                </Link>\r\n                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\r\n                </small>\r\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                <Link\r\n                  to={post.node.fields.slug}\r\n                  className=\"text-primary\"\r\n                >\r\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                </Link>\r\n                <div className=\"d-block\">\r\n                  {getTechTags(tags)}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          <div className=\"mt-4 text-center\">\r\n            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\r\n              <span className=\"text-dark\">Next Page →</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n         query IndexQuery {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: 5 \r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default IndexPage\r\n\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/devPil-223d15ff57f270c5bea79c3994f359ff.jpg\";","import React from \"react\"\r\nimport * as FontAwesome from \"react-icons/fa\"\r\nimport * as Devicons from \"react-icons/di\"\r\n\r\nimport \"./tags.css\"\r\nimport { Link } from \"gatsby\";\r\n\r\nconst TechTag = (props) => {\r\n    const { tag, tech, name, size, color } = props\r\n    const str = name;\r\n    const icon = /^Fa/.test(str) ? React.createElement(FontAwesome[name]) : React.createElement(Devicons[name]);\r\n\r\n    return (\r\n        <div className=\"d-inline-block p-1\">\r\n            <Link to={`/tags/${tag}/`}>\r\n                <button\r\n                    className=\"tech-tag text-white\">\r\n                    <p className=\"d-inline\">{tech} </p>\r\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}>{icon}</div>\r\n                </button>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TechTag","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\";\r\nimport { FaGithubSquare } from \"react-icons/fa\"\r\n\r\nimport \"../layout.css\"\r\n\r\nconst MobileSocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"bottom-bar py-1\">\r\n            <a className=\"text-light\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileSocialLinks;","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst MobilePages = () => {\r\n    return (\r\n        <div className=\"mobile-pages-main\">\r\n            <div className=\"text-center\">\r\n                <p className=\"d-inline p-4\"><Link to=\"/\"><span className=\"text-dark\">Home</span></Link></p>\r\n                {/*\r\n                <p className=\"d-inline p-4\"><Link to=\"/about\"><span className=\"text-dark\">About</span></Link></p>\r\n                <p className=\"d-inline p-4\"><Link to=\"/archive\"><span className=\"text-dark\">Archive</span></Link></p>\r\n                */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobilePages\r\n\r\n\r\n","import React from \"react\"\r\nimport { FaGithubSquare } from \"react-icons/fa\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"social-links float-right mr-4\">\r\n            <a className=\"text-light ml-4\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={40} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport \"./header.css\"\r\nimport devPil from \"../../images/devPil.jpg\"\r\n\r\nconst MobileBio = (props) => {\r\n\r\n    return (\r\n        <div className=\"mobile-bio-main\">\r\n            <img src={devPil}  className=\"ml-4 mt-2\" style={{ maxWidth: `75px`, maxHeight: `75px`, borderRadius: `50%`,boxShadow: `1px 1px 3px`}} alt=\"author-pic\" />\r\n            <h4 className=\"mr-4 mt-4\">{props.author}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileBio","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nimport MobileSocialLinks from \"./MobileSocialLinks\"\r\nimport MobilePageLinks from \"./MobilePageLinks\"\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport MobileBio from \"./MobileBio\"\r\nimport \"./header.css\"\r\n\r\nconst Header = ({ siteTitle, tagline, author, contacts }) => {\r\n\r\n  return (\r\n    <header\r\n      className=\"head-main\"\r\n      style={{\r\n        background: `black`\r\n      }}\r\n    >\r\n      <div className=\"head-elements\"\r\n        style={{\r\n          margin: `0`,\r\n          padding: `.75rem`\r\n        }}\r\n      >\r\n        <h1 className=\"head-logo ml-4\" style={{ margin: 0 }}>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              color: `white`,\r\n              textDecoration: `none`,\r\n            }}\r\n          >\r\n            {siteTitle}\r\n          </Link>\r\n        </h1>\r\n        <SocialLinks contacts={contacts} />\r\n      </div>\r\n      <MobileSocialLinks contacts={contacts} />\r\n      <MobilePageLinks />\r\n      <MobileBio author={author} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport Header from \"./header/header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            tagline\r\n            author\r\n            contacts { github }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n      render={data => (\r\n        <>\r\n          <Header\r\n            siteTitle={data.site.siteMetadata.title}\r\n            tagline={data.site.siteMetadata.tagline}\r\n            author={data.site.siteMetadata.author}\r\n            contacts={data.site.siteMetadata.contacts} />\r\n          <div\r\n            style={{\r\n              margin: `0 auto`,\r\n              padding: `0px 1.0875rem 1.45rem`,\r\n              paddingTop: 0,\r\n            }}\r\n          >\r\n            <main className=\"p-4\">{children}</main>\r\n            <footer className=\"text-center\">\r\n              <hr/>\r\n              <p className=\"d-inline\">© {new Date().getFullYear()} <a className=\"text-info\" href=\"https://devPil.github.io/\">devPil</a>, All Rights Reserved.</p>\r\n              <p className=\"mt-5 text-muted d-inline\"><i> Built with\r\n                            {` `}\r\n                <a className=\"text-info\" href=\"https://www.gatsbyjs.org\">Gatsby</a></i>\r\n              </p>\r\n            </footer>\r\n          </div>\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport \"./sidebar.css\"\r\n\r\nimport devPil from \"../../images/devPil.jpg\"\r\n\r\nconst Bio = ({ author, tagline }) => {\r\n\r\n    return (\r\n        <div className=\"bio-main w-75\">\r\n            <img src={devPil} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\" />\r\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\r\n            <small className=\"text-muted\">{tagline}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio","import React from \"react\"\r\nimport {\r\n    FaGithubSquare,\r\n} from \"react-icons/fa\"\r\nimport \"./sidebar.css\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"side-social-links float-left mt-3 mb-3\">\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport TechTag from \"../tags/TechTag\"\r\n\r\nconst TechTags = (props) => {\r\n    const labels = props.labels\r\n    const posts = props.posts\r\n\r\n    const labelCount = labels.map(label => {\r\n        let count = 0;\r\n        posts.forEach(post => {\r\n            if (post.node.frontmatter.tags.includes(label.tag)) {\r\n                count = count + 1\r\n            }\r\n        })\r\n        return [label.tag, count]\r\n    })\r\n\r\n    const categories = labelCount.filter(label => {\r\n        return label[1] > 0\r\n    })\r\n\r\n    const tags = categories.map(category => {\r\n        return category[0]\r\n    })\r\n\r\n\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Tech Topics</h4>\r\n            <div className=\"d-block\">\r\n                {getTechTags(tags)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TechTags","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport Bio from \"./Bio\"\r\nimport \"./sidebar.css\"\r\n\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport TechTags from \"./TechTags\"\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n                query SiteBioQuery {\r\n                    site {\r\n                        siteMetadata {\r\n                            title\r\n                            tagline\r\n                            author\r\n                            contacts { github }\r\n                            labels {\r\n                                tag\r\n                                tech\r\n                                name \r\n                                size \r\n                                color\r\n                            }\r\n                        }\r\n                    }\r\n                    allMarkdownRemark(\r\n                        limit: 10\r\n                        sort: { fields: [frontmatter___date], order: DESC }\r\n                        filter: { frontmatter: { published: { eq: true } } }\r\n                    ) {\r\n                        edges {\r\n                            node {\r\n                                frontmatter {\r\n                                    tags\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => (\r\n                <>\r\n                    <div className=\"sidebar-main border-right\">\r\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\r\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\r\n                        <div className=\"page-links\">\r\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Home</span></Link>\r\n                            {/*\r\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\r\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\r\n                            */}\r\n                        </div>\r\n                        <div className=\"tech-tags mt-4\">\r\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Sidebar","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n"],"sourceRoot":""}