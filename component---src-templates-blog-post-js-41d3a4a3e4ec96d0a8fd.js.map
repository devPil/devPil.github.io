{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/devPil.jpg","webpack:///./src/components/tags/TechTag.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/MobileSocialLinks.js","webpack:///./src/components/header/MobilePageLinks.js","webpack:///./src/components/header/SocialLinks.js","webpack:///./src/components/header/MobileBio.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js"],"names":["query","BlogPost","props","post","data","markdownRemark","labels","site","siteMetadata","tags","frontmatter","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","className","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_5__","techTags","forEach","tag","i","label","push","_components_tags_TechTag__WEBPACK_IMPORTED_MODULE_6__","key","tech","name","size","color","getTechTags","date","dangerouslySetInnerHTML","__html","html","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","p","TechTag","icon","test","FontAwesome","Devicons","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","style","fontSize","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","MobileSocialLinks","contacts","react_default","href","github","index_esm","MobilePages","gatsby_browser_entry","SocialLinks","MobileBio","src","devPil","maxWidth","maxHeight","borderRadius","boxShadow","alt","Header","siteTitle","tagline","background","margin","padding","textDecoration","header_SocialLinks","header_MobileSocialLinks","MobilePageLinks","header_MobileBio","Layout","Fragment","header_header","paddingTop","Date","getFullYear","_4257020408","node","Bio","TechTags","posts","map","count","includes","filter","category","Sidebar","sidebar_Bio","sidebar_SocialLinks","sidebar_TechTags","allMarkdownRemark","edges","_1742247202"],"mappings":"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","file":"component---src-templates-blog-post-js-41d3a4a3e4ec96d0a8fd.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport \"./blog-post.css\"\r\n\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport TechTag from \"../components/tags/TechTag\"\r\n/* import CustomShareBlock from \"../components/CustomShareBlock\" */\r\n\r\nconst BlogPost = (props) => {\r\n  const post = props.data.markdownRemark\r\n  const labels = props.data.site.siteMetadata.labels\r\n  /*\r\n  const siteName = props.data.site.siteMetadata.title \r\n  const siteUrl = props.data.site.siteMetadata.url\r\n  const url = `${siteUrl}${props.pageContext.slug}`;\r\n   */\r\n  const tags = post.frontmatter.tags\r\n\r\n  const getTechTags = (tags) => {\r\n    const techTags = []\r\n    tags.forEach((tag, i) => {\r\n      labels.forEach((label) => {\r\n        if (tag === label.tag) {\r\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n        }\r\n      })\r\n    })\r\n    return techTags\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={post.frontmatter.title} />\r\n      <div className=\"post-page-main\">\r\n        <div className=\"sidebar px-4 py-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"post-main\">\r\n          <SEO title={post.frontmatter.title} />\r\n          <div className=\"mt-3\">\r\n            <h2 className=\"heading\">{post.frontmatter.title}</h2>\r\n            <div className=\"d-block\">\r\n              {getTechTags(tags)}\r\n            </div>\r\n            <br />\r\n            <small><i>Published on </i> {post.frontmatter.date}</small>\r\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n            {/* <CustomShareBlock title={post.frontmatter.title} siteName={siteName} url={url} /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n      site {\r\n        siteMetadata {\r\n          url\r\n          title\r\n          labels {\r\n              tag\r\n              tech \r\n              name \r\n              size \r\n              color\r\n          }\r\n        }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogPost\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/devPil-223d15ff57f270c5bea79c3994f359ff.jpg\";","import React from \"react\"\r\nimport * as FontAwesome from \"react-icons/fa\"\r\nimport * as Devicons from \"react-icons/di\"\r\n\r\nimport \"./tags.css\"\r\nimport { Link } from \"gatsby\";\r\n\r\nconst TechTag = (props) => {\r\n    const { tag, tech, name, size, color } = props\r\n    const str = name;\r\n    const icon = /^Fa/.test(str) ? React.createElement(FontAwesome[name]) : React.createElement(Devicons[name]);\r\n\r\n    return (\r\n        <div className=\"d-inline-block p-1\">\r\n            <Link to={`/tags/${tag}/`}>\r\n                <button\r\n                    className=\"tech-tag text-white\">\r\n                    <p className=\"d-inline\">{tech} </p>\r\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}>{icon}</div>\r\n                </button>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TechTag","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\";\r\nimport { FaGithubSquare } from \"react-icons/fa\"\r\n\r\nimport \"../layout.css\"\r\n\r\nconst MobileSocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"bottom-bar py-1\">\r\n            <a className=\"text-light\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileSocialLinks;","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst MobilePages = () => {\r\n    return (\r\n        <div className=\"mobile-pages-main\">\r\n            <div className=\"text-center\">\r\n                <p className=\"d-inline p-4\"><Link to=\"/\"><span className=\"text-dark\">Home</span></Link></p>\r\n                {/*\r\n                <p className=\"d-inline p-4\"><Link to=\"/about\"><span className=\"text-dark\">About</span></Link></p>\r\n                <p className=\"d-inline p-4\"><Link to=\"/archive\"><span className=\"text-dark\">Archive</span></Link></p>\r\n                */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobilePages\r\n\r\n\r\n","import React from \"react\"\r\nimport { FaGithubSquare } from \"react-icons/fa\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"social-links float-right mr-4\">\r\n            <a className=\"text-light ml-4\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={40} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport \"./header.css\"\r\nimport devPil from \"../../images/devPil.jpg\"\r\n\r\nconst MobileBio = (props) => {\r\n\r\n    return (\r\n        <div className=\"mobile-bio-main\">\r\n            <img src={devPil}  className=\"ml-4 mt-2\" style={{ maxWidth: `75px`, maxHeight: `75px`, borderRadius: `50%`,boxShadow: `1px 1px 3px`}} alt=\"author-pic\" />\r\n            <h4 className=\"mr-4 mt-4\">{props.author}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileBio","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nimport MobileSocialLinks from \"./MobileSocialLinks\"\r\nimport MobilePageLinks from \"./MobilePageLinks\"\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport MobileBio from \"./MobileBio\"\r\nimport \"./header.css\"\r\n\r\nconst Header = ({ siteTitle, tagline, author, contacts }) => {\r\n\r\n  return (\r\n    <header\r\n      className=\"head-main\"\r\n      style={{\r\n        background: `black`\r\n      }}\r\n    >\r\n      <div className=\"head-elements\"\r\n        style={{\r\n          margin: `0`,\r\n          padding: `.75rem`\r\n        }}\r\n      >\r\n        <h1 className=\"head-logo ml-4\" style={{ margin: 0 }}>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              color: `white`,\r\n              textDecoration: `none`,\r\n            }}\r\n          >\r\n            {siteTitle}\r\n          </Link>\r\n        </h1>\r\n        <SocialLinks contacts={contacts} />\r\n      </div>\r\n      <MobileSocialLinks contacts={contacts} />\r\n      <MobilePageLinks />\r\n      <MobileBio author={author} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport Header from \"./header/header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            tagline\r\n            author\r\n            contacts { github }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n      render={data => (\r\n        <>\r\n          <Header\r\n            siteTitle={data.site.siteMetadata.title}\r\n            tagline={data.site.siteMetadata.tagline}\r\n            author={data.site.siteMetadata.author}\r\n            contacts={data.site.siteMetadata.contacts} />\r\n          <div\r\n            style={{\r\n              margin: `0 auto`,\r\n              padding: `0px 1.0875rem 1.45rem`,\r\n              paddingTop: 0,\r\n            }}\r\n          >\r\n            <main className=\"p-4\">{children}</main>\r\n            <footer className=\"text-center\">\r\n              <hr/>\r\n              <p className=\"d-inline\">© {new Date().getFullYear()} <a className=\"text-info\" href=\"https://devPil.github.io/\">devPil</a>, All Rights Reserved.</p>\r\n              <p className=\"mt-5 text-muted d-inline\"><i> Built with\r\n                            {` `}\r\n                <a className=\"text-info\" href=\"https://www.gatsbyjs.org\">Gatsby</a></i>\r\n              </p>\r\n            </footer>\r\n          </div>\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport \"./sidebar.css\"\r\n\r\nimport devPil from \"../../images/devPil.jpg\"\r\n\r\nconst Bio = ({ author, tagline }) => {\r\n\r\n    return (\r\n        <div className=\"bio-main w-75\">\r\n            <img src={devPil} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\" />\r\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\r\n            <small className=\"text-muted\">{tagline}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio","import React from \"react\"\r\nimport {\r\n    FaGithubSquare,\r\n} from \"react-icons/fa\"\r\nimport \"./sidebar.css\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"side-social-links float-left mt-3 mb-3\">\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport TechTag from \"../tags/TechTag\"\r\n\r\nconst TechTags = (props) => {\r\n    const labels = props.labels\r\n    const posts = props.posts\r\n\r\n    const labelCount = labels.map(label => {\r\n        let count = 0;\r\n        posts.forEach(post => {\r\n            if (post.node.frontmatter.tags.includes(label.tag)) {\r\n                count = count + 1\r\n            }\r\n        })\r\n        return [label.tag, count]\r\n    })\r\n\r\n    const categories = labelCount.filter(label => {\r\n        return label[1] > 0\r\n    })\r\n\r\n    const tags = categories.map(category => {\r\n        return category[0]\r\n    })\r\n\r\n\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            labels.forEach((label) => {\r\n                if (tag === label.tag) {\r\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\r\n                }\r\n            })\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Tech Topics</h4>\r\n            <div className=\"d-block\">\r\n                {getTechTags(tags)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TechTags","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport Bio from \"./Bio\"\r\nimport \"./sidebar.css\"\r\n\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport TechTags from \"./TechTags\"\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n                query SiteBioQuery {\r\n                    site {\r\n                        siteMetadata {\r\n                            title\r\n                            tagline\r\n                            author\r\n                            contacts { github }\r\n                            labels {\r\n                                tag\r\n                                tech\r\n                                name \r\n                                size \r\n                                color\r\n                            }\r\n                        }\r\n                    }\r\n                    allMarkdownRemark(\r\n                        limit: 10\r\n                        sort: { fields: [frontmatter___date], order: DESC }\r\n                        filter: { frontmatter: { published: { eq: true } } }\r\n                    ) {\r\n                        edges {\r\n                            node {\r\n                                frontmatter {\r\n                                    tags\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => (\r\n                <>\r\n                    <div className=\"sidebar-main border-right\">\r\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\r\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\r\n                        <div className=\"page-links\">\r\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Home</span></Link>\r\n                            {/*\r\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\r\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\r\n                            */}\r\n                        </div>\r\n                        <div className=\"tech-tags mt-4\">\r\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Sidebar"],"sourceRoot":""}