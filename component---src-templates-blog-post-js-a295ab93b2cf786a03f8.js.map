{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/devPil.jpg","webpack:///./src/components/tags/TechTag.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/MobileSocialLinks.js","webpack:///./src/components/header/MobilePageLinks.js","webpack:///./src/components/header/SocialLinks.js","webpack:///./src/components/header/MobileBio.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js"],"names":["query","BlogPost","props","post","data","markdownRemark","labels","site","siteMetadata","tags","frontmatter","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","className","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_5__","techTags","forEach","tag","i","label","push","_components_tags_TechTag__WEBPACK_IMPORTED_MODULE_6__","key","tech","name","size","color","getTechTags","date","dangerouslySetInnerHTML","__html","html","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","p","TechTag","icon","test","FontAwesome","Devicons","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","style","fontSize","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","MobileSocialLinks","contacts","react_default","href","github","index_esm","MobilePages","gatsby_browser_entry","SocialLinks","MobileBio","src","devPil","maxWidth","maxHeight","borderRadius","boxShadow","alt","Header","siteTitle","tagline","background","margin","padding","textDecoration","header_SocialLinks","header_MobileSocialLinks","MobilePageLinks","header_MobileBio","Layout","Fragment","header_header","paddingTop","Date","getFullYear","_3732814306","node","Bio","TechTags","posts","map","count","includes","filter","category","Sidebar","sidebar_Bio","sidebar_SocialLinks","sidebar_TechTags","allMarkdownRemark","edges","_1198826008"],"mappings":"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","file":"component---src-templates-blog-post-js-a295ab93b2cf786a03f8.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"./blog-post.css\"\n\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n/* import CustomShareBlock from \"../components/CustomShareBlock\" */\n\nconst BlogPost = props => {\n  const post = props.data.markdownRemark\n  const labels = props.data.site.siteMetadata.labels\n  /*\n  const siteName = props.data.site.siteMetadata.title \n  const siteUrl = props.data.site.siteMetadata.url\n  const url = `${siteUrl}${props.pageContext.slug}`;\n   */\n  const tags = post.frontmatter.tags\n\n  const getTechTags = tags => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach(label => {\n        if (tag === label.tag) {\n          techTags.push(\n            <TechTag\n              key={i}\n              tag={label.tag}\n              tech={label.tech}\n              name={label.name}\n              size={label.size}\n              color={label.color}\n            />\n          )\n        }\n      })\n    })\n    return techTags\n  }\n\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <div className=\"post-page-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"post-main\">\n          <SEO title={post.frontmatter.title} />\n          <div className=\"mt-3\">\n            <h2 className=\"heading\">{post.frontmatter.title}</h2>\n            <div className=\"d-block\">{getTechTags(tags)}</div>\n            <br />\n            <small>\n              <i>Published on </i> {post.frontmatter.date}\n            </small>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            {/* <CustomShareBlock title={post.frontmatter.title} siteName={siteName} url={url} /> */}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        url\n        title\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n\nexport default BlogPost\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/devPil-223d15ff57f270c5bea79c3994f359ff.jpg\";","import React from \"react\"\nimport * as FontAwesome from \"react-icons/fa\"\nimport * as Devicons from \"react-icons/di\"\n\nimport \"./tags.css\"\nimport { Link } from \"gatsby\"\n\nconst TechTag = props => {\n  const { tag, tech, name, size, color } = props\n  const str = name\n  const icon = /^Fa/.test(str)\n    ? React.createElement(FontAwesome[name])\n    : React.createElement(Devicons[name])\n\n  return (\n    <div className=\"d-inline-block p-1\">\n      <Link to={`/tags/${tag}/`}>\n        <button className=\"tech-tag text-white\">\n          <p className=\"d-inline\">{tech} </p>\n          <div className=\"d-inline\" style={{ fontSize: size, color: color }}>\n            {icon}\n          </div>\n        </button>\n      </Link>\n    </div>\n  )\n}\n\nexport default TechTag\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: `google-site-verification`,\n          content: \"LCkQhqdP4o6gkhCNAyrwHNn-TpyiL96m_gBcUWsoNNw\",\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `ko`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { FaGithubSquare } from \"react-icons/fa\"\n\nimport \"../layout.css\"\n\nconst MobileSocialLinks = ({ contacts }) => {\n  return (\n    <div className=\"bottom-bar py-1\">\n      <a className=\"text-light\" href={contacts.github}>\n        <span title=\"GitHub\">\n          <FaGithubSquare size={26} style={{ color: \"light\" }} />\n        </span>\n      </a>\n    </div>\n  )\n}\n\nexport default MobileSocialLinks\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst MobilePages = () => {\n  return (\n    <div className=\"mobile-pages-main\">\n      <div className=\"text-center\">\n        <p className=\"d-inline p-4\">\n          <Link to=\"/\">\n            <span className=\"text-dark\">Home</span>\n          </Link>\n        </p>\n        {/*\n                <p className=\"d-inline p-4\"><Link to=\"/about\"><span className=\"text-dark\">About</span></Link></p>\n                <p className=\"d-inline p-4\"><Link to=\"/archive\"><span className=\"text-dark\">Archive</span></Link></p>\n                */}\n      </div>\n    </div>\n  )\n}\n\nexport default MobilePages\n","import React from \"react\"\nimport { FaGithubSquare } from \"react-icons/fa\"\n\nconst SocialLinks = ({ contacts }) => {\n  return (\n    <div className=\"social-links float-right mr-4\">\n      <a className=\"text-light ml-4\" href={contacts.github}>\n        <span title=\"GitHub\">\n          <FaGithubSquare size={40} style={{ color: \"light\" }} />\n        </span>\n      </a>\n    </div>\n  )\n}\n\nexport default SocialLinks\n","import React from \"react\"\n\nimport \"./header.css\"\nimport devPil from \"../../images/devPil.jpg\"\n\nconst MobileBio = props => {\n  return (\n    <div className=\"mobile-bio-main\">\n      <img\n        src={devPil}\n        className=\"ml-4 mt-2\"\n        style={{\n          maxWidth: `75px`,\n          maxHeight: `75px`,\n          borderRadius: `50%`,\n          boxShadow: `1px 1px 3px`,\n        }}\n        alt=\"author-pic\"\n      />\n      <h4 className=\"mr-4 mt-4\">{props.author}</h4>\n    </div>\n  )\n}\n\nexport default MobileBio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport MobileSocialLinks from \"./MobileSocialLinks\"\nimport MobilePageLinks from \"./MobilePageLinks\"\nimport SocialLinks from \"./SocialLinks\"\nimport MobileBio from \"./MobileBio\"\nimport \"./header.css\"\n\nconst Header = ({ siteTitle, tagline, author, contacts }) => {\n  return (\n    <header\n      className=\"head-main\"\n      style={{\n        background: `black`,\n      }}\n    >\n      <div\n        className=\"head-elements\"\n        style={{\n          margin: `0`,\n          padding: `.75rem`,\n        }}\n      >\n        <h1 className=\"head-logo ml-4\" style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `white`,\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <SocialLinks contacts={contacts} />\n      </div>\n      <MobileSocialLinks contacts={contacts} />\n      <MobilePageLinks />\n      <MobileBio author={author} />\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Header from \"./header/header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n              tagline\n              author\n              contacts {\n                github\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <Header\n            siteTitle={data.site.siteMetadata.title}\n            tagline={data.site.siteMetadata.tagline}\n            author={data.site.siteMetadata.author}\n            contacts={data.site.siteMetadata.contacts}\n          />\n          <div\n            style={{\n              margin: `0 auto`,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0,\n            }}\n          >\n            <main className=\"p-4\">{children}</main>\n            <footer className=\"text-center\">\n              <hr />\n              <p className=\"d-inline\">\n                © {new Date().getFullYear()}{\" \"}\n                <a className=\"text-info\" href=\"https://devPil.github.io/\">\n                  devPil\n                </a>\n                , All Rights Reserved.\n              </p>\n              <p className=\"mt-5 text-muted d-inline\">\n                <i>\n                  {\" \"}\n                  Built with\n                  {` `}\n                  <a className=\"text-info\" href=\"https://www.gatsbyjs.org\">\n                    Gatsby\n                  </a>\n                </i>\n              </p>\n            </footer>\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport \"./sidebar.css\"\nimport devPil from \"../../images/devPil.jpg\"\n\nconst Bio = ({ author, tagline }) => {\n  return (\n    <div className=\"bio-main w-75\">\n      <img\n        src={devPil}\n        style={{ maxWidth: `100px` }}\n        className=\"profile-img\"\n        alt=\"\"\n      />\n      <h3 className=\"mt-2 author-bio\">{author}</h3>\n      <small className=\"text-muted\">{tagline}</small>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { FaGithubSquare } from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\nconst SocialLinks = ({ contacts }) => {\n  return (\n    <div className=\"side-social-links float-left mt-3 mb-3\">\n      <a className=\"text-secondary p-2\" href={contacts.github}>\n        <span title=\"GitHub\">\n          <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n        </span>\n      </a>\n    </div>\n  )\n}\n\nexport default SocialLinks\n","import React from \"react\"\n\nimport TechTag from \"../tags/TechTag\"\n\nconst TechTags = props => {\n  const labels = props.labels\n  const posts = props.posts\n\n  const labelCount = labels.map(label => {\n    let count = 0\n    posts.forEach(post => {\n      if (post.node.frontmatter.tags.includes(label.tag)) {\n        count = count + 1\n      }\n    })\n    return [label.tag, count]\n  })\n\n  const categories = labelCount.filter(label => {\n    return label[1] > 0\n  })\n\n  const tags = categories.map(category => {\n    return category[0]\n  })\n\n  const getTechTags = tags => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach(label => {\n        if (tag === label.tag) {\n          techTags.push(\n            <TechTag\n              key={i}\n              tag={label.tag}\n              tech={label.tech}\n              name={label.name}\n              size={label.size}\n              color={label.color}\n            />\n          )\n        }\n      })\n    })\n    return techTags\n  }\n\n  return (\n    <>\n      <h4>Tech Topics</h4>\n      <div className=\"d-block\">{getTechTags(tags)}</div>\n    </>\n  )\n}\n\nexport default TechTags\n","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\nconst Sidebar = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteBioQuery {\n          site {\n            siteMetadata {\n              title\n              tagline\n              author\n              contacts {\n                github\n              }\n              labels {\n                tag\n                tech\n                name\n                size\n                color\n              }\n            }\n          }\n          allMarkdownRemark(\n            limit: 10\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { published: { eq: true } } }\n          ) {\n            edges {\n              node {\n                frontmatter {\n                  tags\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <div className=\"sidebar-main border-right\">\n            <Bio\n              author={data.site.siteMetadata.author}\n              tagline={data.site.siteMetadata.tagline}\n            />\n            <SocialLinks contacts={data.site.siteMetadata.contacts} />\n            <div className=\"page-links\">\n              <Link to=\"/\">\n                <span className=\"text-dark d-block py-1\">Home</span>\n              </Link>\n              <Link to=\"/archive\">\n                <span className=\"text-dark d-block py-1\">All Posts</span>\n              </Link>\n              {/*\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\n                            */}\n            </div>\n            <div className=\"tech-tags mt-4\">\n              <TechTags\n                labels={data.site.siteMetadata.labels}\n                posts={data.allMarkdownRemark.edges}\n              />\n            </div>\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nexport default Sidebar\n"],"sourceRoot":""}